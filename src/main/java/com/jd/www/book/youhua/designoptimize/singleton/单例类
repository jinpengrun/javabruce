1 节省系统开销,尤其对于重量级对象而言
2 new 操作次数减少,因而对系统内存的使用频率也会降低,减轻gc压力,缩短gc停顿时间


1 SimpleSingleton
  优点 简单可靠
  缺点： 仅是无法对instance实例做延迟加载，假如单例创建过程很慢，由于instance成员变量是static，jvm加载单例类时，单例对象就会被创建
        如果此时，这个单例类在系统中还扮演其他角色，那么任何使用这个单例类的地方都会初始化这个单例变量
        不管是否被用到

  为了提高系统在调用相关函数时候的响应速度，就需要引入延迟加载机制（这个单例类在系统中还扮演其他角色）


2 LazySingleton
   静态方法上 加synchronized  多线程环境中消耗很大 参看对比方法


3 StaticSingleton 终极方案
  内部静态类


第三种已经可以保证 正常情况下的 单例情况 ，除了使用 反射，unsafe 类 等情况 如果在序列化情况下 看如下情况

