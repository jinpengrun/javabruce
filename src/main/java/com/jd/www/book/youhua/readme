java程序性能优化
1性能调优概述
 指标
 1 执行时间：一段代码从开始运行到运行结束，所使用时间
 2 cpu时间：函数或者线程占用cpu时间
 3 内存分配：程序运行时占用内存空间
 4 磁盘吞吐率：描述io的使用情况
 5 网络吞吐量：描述网络的使用情况
 6 响应时间：系统对某个用户行为或者事件做出响应的时间。时间越短，性能越好

 性能瓶颈
 磁盘io：由于磁盘io读写速度要比内存慢很多，低效的io操作会拖累整个系统
 网络操作：对网络数据进行读写的情况与磁盘io类似。
 cpu：
 异常：对于java应用，异常的捕获和处理是非常耗时的。如果程序高频率地进行异常处理，则整体性能便会有明显下降
 数据库：缓慢的同步操作会增加耗时
 锁竞争：高并发程序来说如果竞争激烈，无疑是对性能大的打击
 内存：一般来说只要设计合理，内存不太可能成为瓶颈

性能优化层次
 1 设计调优
    软件开发之前，评估系统可能存在的潜在问题，给出合理的设计方案
    这是对系统在宏观层面上本质的优化，代码优化，jvm优化都是对系统
    微观层面上量的优化
    比如组件a依赖事件b ，一般是轮询查看，设计改变的话就是 事件通知机制

 2 代码调优
 3 jvm调优
 4 数据库调优
 5 操作系统调优

基本调优策略和手段
  1 需要明确的目标，清楚指出优化的对象和最终目的
  2 其次需要在目标平台上对软件进行测试，通过性能监控和统计工具观测系统是否达到目标

  因素：磁盘io，网络io和cpu。
      代码层次进行优化，如果已经无优化地步 ，就可以对jvm层，数据库层，操作系统层

