1集合包
集合包最常用的有Collection 和 Map 两个接口的实现类，Collection 用于存放单个对象，Map用于存放key-value的键值对
Collection中最常用又分为list 和 set  list支持放入重复元素，set不支持重复
list最常用实现类有：arraylist linkedlist vector 以及 stack；set接口常用有：hashset，treeset

1 arraylist
    基于数组实现，默认构造器arraylist（int）初始的initialCapacity 空构造器创建大小为10的数组
    自动扩展:基于元素数量+1作为mincapacity变量，比较值和object数组大小，大于数组值，将当前object数组值赋给一个数组对象
            接着产生一个新的数组容量值，计算方法为当前数组值*1.5+1，如果此值仍然小于mincapacity，那么就以mincapacity
            作为新的容量值，调用arrays。copyof生成新的数组对象
    method:add(e,index),这种方式 将index后的e全部后挪一位，需要付出一次数组拷贝的代价，还提供了addAll
           remove(e):将index后的du对象往前复制一位，并将数组最后一个引用设置为null，即就是释放了对象应用
                     还提供了remove（index），多了范围查找，但是少了对象查找，性能更好
                     查找元素 采用 equals 方法

2 linkedlist
    内部采用双向链表方式，里面每个元素都知道前一个和后一个元素。内部类 entry来代表几何元素，元素值赋给element属性，next，和previous分别
    执行后一个和前一个元素，基于这样实现集合元素快速移动
    查找 和 删除 需要遍历元素

3 vector
    add  remove  get 都加了synchronized关键字，默认创建大小10的object 数组，将扩充 因子设置为0 策略因子大于0 现有大小+因子
    如果因子小于等于0 则扩充*2
4 stack
    继承自vector lifo  后进先出的原则，push pop， peek 方法

5 hashset
    默认构造一个 hashmap对象
    add 通过 map 的 put
    remove 通过 map 的remove
    contains 通过 map的containskey
    iterator调用keyset 的 iterator 执行
    不支持get(int)获取对象
6 treeset
    基于treemap 实现 就是实现了排序
7 hashmap


